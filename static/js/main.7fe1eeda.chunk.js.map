{"version":3,"sources":["components/Header/index.js","components/Header/Header.js","rational.js","align.js","display.js","dropdown.js","target.js","totals.js","Ingredient.js","visualize.js","factory.js","fragment.js","events.js","belt.js","buildings/building.js","buildings/Miner.js","Item.js","recipes/Recipe.js","recipes/ResourceRecipe.js","settings.js","init.js","recipes/index.js","buildings/index.js","components/Main/index.js","components/Main/Main.js","components/Router/index.js","components/App/index.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Header","React","PureComponent","Rational","p","q","lesser","bigInt","zero","minus","gcd","abs","greater","one","divide","this","toJSNumber","equals","toString","maxDigits","roundingFactor","pow","sign","x","less","sub","divmod","add","integerPart","quotient","decimalPart","fraction","remainder","ten","equal","mul","length","slice","isZero","toDecimal","result","other","times","minusOne","plus","subtract","div","floor","exp","s","i","indexOf","numerator","denominator","fromDecimal","j","integer","fromFloats","arg","Number","isFinite","isNaN","isInteger","fromInteger","Math","max","log2","floatPart","shiftLeft","r","round","threeTenths","oneThird","threeFifths","twoThirds","half","seconds","minutes","fromFloat","hours","displayRates","Map","longRateNames","Formatter","setDisplayRate","displayFormat","ratePrecision","countPrecision","rate","rateName","longRate","get","rateFactor","prec","idx","toAdd","toMixed","align","count","toUpDecimal","text","colspan","changeOverclock","d","hundred","twoFifty","fromString","value","factorySpec","setOverclock","recipe","updateSolution","displayedItems","displayItems","spec","totals","ignore","topo","push","totalAveragePower","totalPeakPower","powerShardsUsed","display","rates","item","product","itemRate","gives","overclock","getOverclock","overclockString","getPowerUsage","average","peak","has","building","getBuilding","getCount","powerShardCount","ceil","toFloat","headers","format","totalCols","table","select","headerRow","selectAll","data","exit","remove","join","attr","rows","row","enter","append","classed","on","toggleIgnoreHandler","beltCell","Text","buildingCell","overclockCell","iconPath","name","alignRate","belt","alignCount","getBeltCount","buildingRow","filter","powerShard","items","powerShardCell","insert","totalPower","footerPowerRow","footerPowerShardRow","dropdownLocal","d3","toggleDropdown","dropdownNode","classes","classList","contains","node","selected","style","makeDropdown","selector","each","set","dropdownInner","inputId","labelFor","addInputs","checked","callback","nodes","call","property","targetCount","BuildTarget","index","itemKey","tiers","changedBuilding","buildings","target","element","create","removeTarget","key","itemHandler","buildingLabel","buildingInput","buildingsChanged","changeBuildingCountHandler","rateLabel","setRateLabel","rateInput","rateChanged","changeRateHandler","textContent","getRecipe","category","baseRate","getRecipeRate","Totals","heights","height","knownHeight","undefined","newTopo","concat","updateHeight","Ingredient","amount","d3Base","d3Sankey","recipeValue","inputValue","ingredients","ing","outputValue","rankHeightEstimate","rank","valueFactor","total","getRateString","getMachineCountString","console","assert","getOverclockString","beltPath","x0","link","source","x1","y0","y0top","width","y1","y1top","mid","slope","dy","beltCount","yOffset","y0belt","y1belt","xControl","color","scaleOrdinal","schemeCategory10","renderTotals","targets","outputs","getRate","nodeMap","links","recipes","subRecipe","belts","beltCountExact","makeGraph","maxRank","ranks","largestValue","rankList","beltDensity","maxTextWidth","testSVG","textWidth","getBBox","nodeWidth","largestEstimate","estimate","svg","sankey","nodePadding","nodeAlign","sankeyRight","extent","rects","darker","iconSize","twoLineText","sankeyLinkHorizontal","rectElements","overlayData","graphTab","origDisplay","rect","y","minerCategories","Set","resourcePurities","factor","DEFAULT_PURITY","DEFAULT_BELT","setHash","window","location","hash","settings","currentTab","DEFAULT_TAB","targetStrings","buildTargets","targetString","alt","altRecipes","minerStrings","minerSettings","miner","purity","formatSettings","itemTiers","miners","tierMap","tier","tierItems","sort","a","b","initMinerSettings","delete","power","overclockFactor","splice","subtotals","produce","combine","solve","plusHandler","addTarget","clickTab","tabName","toggleIgnore","changeRatePrecision","event","changeCountPrecision","Belt","process","Building","time","reciprocate","Miner","getResourcePurity","Item","uses","newRate","Recipe","addUse","addRecipe","item_key","key_name","ResourceRecipe","rateHandler","beltHandler","changeAltRecipe","setRecipe","renderIngredient","ingSpan","renderAltRecipes","split","recipeKey","dropdowns","recipeLabel","mineHandler","setMiner","renderSettings","targetSetting","parts","type","setBuildings","Error","setRate","renderTargets","clear","ignoreSetting","renderIgnore","overclockSetting","percentString","percent","renderOverclock","longRateName","form","rateOption","renderRateOptions","renderPrecisions","beltKey","beltOption","renderBelts","minerKey","purityKey","resources","minerDefs","purities","purityDef","minerDef","id","resourceTable","header","purityRow","cell","renderResources","renderTab","loadData","itemData","getItems","resourceData","recipeData","makeRecipe","getRecipes","buildingData","minerData","base_rate","getBuildings","beltData","getBelts","setData","init","fragment","pairs","substr","pair","loadSettings","Main","handlers","Fragment","className","onClick","title","colSpan","min","onChange","href","Router","component","path","App","CssBaseline","Boolean","hostname","match","theme","createMuiTheme","palette","primary","typography","useNextVariants","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7fe1eeda.chunk.js","sourcesContent":["import Header from './Header';\n\nexport default Header;\n","import React from 'react';\n\nclass Header extends React.PureComponent {\n    render() {\n        return (\n            <div />\n        );\n    }\n}\n\nexport default Header;\n","import bigInt from 'big-integer';\n\nexport class Rational {\n    constructor(p, q) {\n        if (q.lesser(bigInt.zero)) {\n            p = bigInt.zero.minus(p);\n            q = bigInt.zero.minus(q);\n        }\n        const gcd = bigInt.gcd(p.abs(), q);\n        if (gcd.greater(bigInt.one)) {\n            p = p.divide(gcd);\n            q = q.divide(gcd);\n        }\n        this.p = p;\n        this.q = q;\n    }\n\n    toFloat() {\n        return this.p.toJSNumber() / this.q.toJSNumber();\n    }\n\n    toString() {\n        if (this.q.equals(bigInt.one)) {\n            return this.p.toString();\n        }\n        return `${ this.p.toString() }/${ this.q.toString() }`;\n    }\n\n    toDecimal(maxDigits, roundingFactor) {\n        if (maxDigits == null) {\n            maxDigits = 3;\n        }\n        if (roundingFactor == null) {\n            roundingFactor = new Rational(bigInt(5), bigInt(10).pow(maxDigits + 1));\n        }\n\n        let sign = '';\n        let x = this;\n        if (x.less(zero)) {\n            sign = '-';\n            x = zero.sub(x);\n        }\n        x = x.add(roundingFactor);\n        let divmod = x.p.divmod(x.q);\n        const integerPart = divmod.quotient.toString();\n        let decimalPart = '';\n        let fraction = new Rational(divmod.remainder, x.q);\n        const ten = new Rational(bigInt(10), bigInt.one);\n        while (maxDigits > 0 && !fraction.equal(roundingFactor)) {\n            fraction = fraction.mul(ten);\n            roundingFactor = roundingFactor.mul(ten);\n            divmod = fraction.p.divmod(fraction.q);\n            decimalPart += divmod.quotient.toString();\n            fraction = new Rational(divmod.remainder, fraction.q);\n            maxDigits -= 1;\n        }\n        if (fraction.equal(roundingFactor)) {\n            while (decimalPart[decimalPart.length - 1] === '0') {\n                decimalPart = decimalPart.slice(0, decimalPart.length - 1);\n            }\n        }\n        if (decimalPart !== '') {\n            return `${ sign + integerPart }.${ decimalPart }`;\n        }\n        return sign + integerPart;\n    }\n\n    toUpDecimal(maxDigits) {\n        const fraction = new Rational(bigInt.one, bigInt(10).pow(maxDigits));\n        const divmod = this.divmod(fraction);\n        let x = this;\n        if (!divmod.remainder.isZero()) {\n            x = x.add(fraction);\n        }\n        return x.toDecimal(maxDigits, zero);\n    }\n\n    toMixed() {\n        const divmod = this.p.divmod(this.q);\n        if (divmod.quotient.isZero() || divmod.remainder.isZero()) {\n            return this.toString();\n        }\n        return `${ divmod.quotient.toString() } + ${ divmod.remainder.toString() }/${ this.q.toString() }`;\n    }\n\n    isZero() {\n        return this.p.isZero();\n    }\n\n    isInteger() {\n        return this.q.equals(bigInt.one);\n    }\n\n    ceil() {\n        const divmod = this.p.divmod(this.q);\n        let result = new Rational(divmod.quotient, bigInt.one);\n        if (!divmod.remainder.isZero()) {\n            result = result.add(one);\n        }\n        return result;\n    }\n\n    floor() {\n        const divmod = this.p.divmod(this.q);\n        let result = new Rational(divmod.quotient, bigInt.one);\n        if (result.less(zero) && !divmod.remainder.isZero()) {\n            result = result.sub(one);\n        }\n        return result;\n    }\n\n    equal(other) {\n        return this.p.equals(other.p) && this.q.equals(other.q);\n    }\n\n    less(other) {\n        return this.p.times(other.q).lesser(this.q.times(other.p));\n    }\n\n    abs() {\n        if (this.less(zero)) {\n            return this.mul(minusOne);\n        }\n        return this;\n    }\n\n    add(other) {\n        return new Rational(\n            this.p.times(other.q).plus(this.q.times(other.p)),\n            this.q.times(other.q)\n        );\n    }\n\n    sub(other) {\n        return new Rational(\n            this.p.times(other.q).subtract(this.q.times(other.p)),\n            this.q.times(other.q)\n        );\n    }\n\n    mul(other) {\n        return new Rational(\n            this.p.times(other.p),\n            this.q.times(other.q)\n        );\n    }\n\n    div(other) {\n        return new Rational(\n            this.p.times(other.q),\n            this.q.times(other.p)\n        );\n    }\n\n    divmod(other) {\n        const quotient = this.div(other);\n        const div = quotient.floor();\n        const mod = this.sub(other.mul(div));\n        return { quotient: div, remainder: mod };\n    }\n\n    reciprocate() {\n        return new Rational(this.q, this.p);\n    }\n\n    // exp must be a JS float with an integer in it.\n    pow(exp) {\n        return new Rational(this.p.pow(exp), this.q.pow(exp));\n    }\n\n    static fromDecimal(s) {\n        const i = s.indexOf('.');\n        if (i === -1 || i === s.length - 1) {\n            return new Rational(bigInt(s), bigInt.one);\n        }\n        const integerPart = new Rational(bigInt(s.slice(0, i)), bigInt.one);\n        const numerator = bigInt(s.slice(i + 1));\n        const denominator = bigInt(10).pow(s.length - i - 1);\n        return integerPart.add(new Rational(numerator, denominator));\n    }\n\n    static fromString(s) {\n        const i = s.indexOf('/');\n        if (i === -1) {\n            return Rational.fromDecimal(s);\n        }\n        const j = s.indexOf('+');\n        const q = bigInt(s.slice(i + 1));\n        let p;\n        if (j !== -1) {\n            const integer = bigInt(s.slice(0, j));\n            p = bigInt(s.slice(j + 1, i)).plus(integer.times(q));\n        } else {\n            p = bigInt(s.slice(0, i));\n        }\n        return new Rational(p, q);\n    }\n\n    static fromInteger(x) {\n        return Rational.fromFloats(x, 1);\n    }\n\n    static fromFloat(arg) {\n        if (arg === 0 || !Number.isFinite(arg) || Number.isNaN(arg)) {\n            return zero;\n        }\n        if (Number.isInteger(arg)) {\n            return Rational.fromInteger(arg);\n        }\n        const x = Math.abs(arg);\n        let exp = Math.max(-1023, Math.floor(Math.log2(x)) + 1);\n        let floatPart = x * (2 ** -exp);\n        for (let i = 0; i < 300 && floatPart !== Math.floor(floatPart); i++) {\n            floatPart *= 2;\n            exp -= 1;\n        }\n        let numerator = bigInt(floatPart);\n        let denominator = bigInt.one;\n        if (exp > 0) {\n            numerator = numerator.shiftLeft(exp);\n        } else {\n            denominator = denominator.shiftLeft(-exp);\n        }\n        return new Rational(numerator, denominator);\n    }\n\n    // This function is a hack, which intentionally limits its precision\n    // in order to paper over floating-point inaccuracies.\n    static fromFloatApproximate(x) {\n        if (Number.isInteger(x)) {\n            return Rational.fromFloats(x, 1);\n        }\n        // Sufficient precision for our data?\n        const r = new Rational(bigInt(Math.round(x * 100000)), bigInt(100000));\n        // Recognize 1/3 and 2/3 explicitly.\n        const divmod = r.divmod(one);\n        if (divmod.remainder.equal(threeTenths)) {\n            return divmod.quotient.add(oneThird);\n        } if (divmod.remainder.equal(threeFifths)) {\n            return divmod.quotient.add(twoThirds);\n        }\n        return r;\n    }\n\n    static fromFloats(p, q) {\n        return new Rational(bigInt(p), bigInt(q));\n    }\n}\n\n// Decimal approximations.\nconst threeTenths = new Rational(bigInt(33333), bigInt(100000));\nconst threeFifths = new Rational(bigInt(33333), bigInt(50000));\n\nconst minusOne = new Rational(bigInt.minusOne, bigInt.one);\nconst zero = new Rational(bigInt.zero, bigInt.one);\nconst one = new Rational(bigInt.one, bigInt.one);\nconst half = new Rational(bigInt.one, bigInt(2));\nconst oneThird = new Rational(bigInt.one, bigInt(3));\nconst twoThirds = new Rational(bigInt(2), bigInt(3));\n\nexport {\n    minusOne, zero, one, half, oneThird, twoThirds\n};\n","import { Rational, one } from './rational.js';\n\nexport const DEFAULT_RATE = 'm';\nexport const DEFAULT_RATE_PRECISION = 3;\nexport const DEFAULT_COUNT_PRECISION = 1;\n\nconst seconds = one;\nconst minutes = Rational.fromFloat(60);\nconst hours = Rational.fromFloat(3600);\n\nconst displayRates = new Map([\n    ['s', seconds],\n    ['m', minutes],\n    ['h', hours],\n]);\n\nexport const longRateNames = new Map([\n    ['s', 'second'],\n    ['m', 'minute'],\n    ['h', 'hour'],\n]);\n\nexport class Formatter {\n    constructor() {\n        this.setDisplayRate(DEFAULT_RATE);\n        this.displayFormat = 'decimal';\n        this.ratePrecision = DEFAULT_RATE_PRECISION;\n        this.countPrecision = DEFAULT_COUNT_PRECISION;\n    }\n\n    setDisplayRate(rate) {\n        this.rateName = rate;\n        this.longRate = longRateNames.get(rate);\n        this.rateFactor = displayRates.get(rate);\n    }\n\n    align(s, prec) {\n        if (this.displayFormat === 'rational') {\n            return s;\n        }\n        let idx = s.indexOf('.');\n        if (idx === -1) {\n            idx = s.length;\n        }\n        let toAdd = prec - s.length + idx;\n        if (prec > 0) {\n            toAdd += 1;\n        }\n        while (toAdd > 0) {\n            s += '\\u00A0';\n            toAdd--;\n        }\n        return s;\n    }\n\n    rate(rate) {\n        rate = rate.mul(this.rateFactor);\n        if (this.displayFormat === 'rational') {\n            return rate.toMixed();\n        }\n        return rate.toDecimal(this.ratePrecision);\n    }\n\n    alignRate(rate) {\n        return this.align(this.rate(rate), this.ratePrecision);\n    }\n\n    count(count) {\n        if (this.displayFormat === 'rational') {\n            return count.toMixed();\n        }\n        return count.toUpDecimal(this.countPrecision);\n    }\n\n    alignCount(count) {\n        return this.align(this.count(count), this.countPrecision);\n    }\n}\n","import { select } from 'd3';\n\nimport { toggleIgnoreHandler } from './events';\nimport { spec as factorySpec } from './factory';\nimport { Rational, zero, one } from './rational';\n\nclass Header {\n    constructor(text, colspan) {\n        this.text = text;\n        this.colspan = colspan;\n    }\n}\n\nfunction changeOverclock(d) {\n    const hundred = Rational.fromFloat(100);\n    const twoFifty = Rational.fromFloat(250);\n    let x = Rational.fromString(this.value).floor();\n    if (x.less(one)) {\n        x = one;\n    }\n    if (twoFifty.less(x)) {\n        x = twoFifty;\n    }\n    x = x.div(hundred);\n    factorySpec.setOverclock(d.recipe, x);\n    factorySpec.updateSolution();\n}\n\n// Remember these values from update to update, to make it simpler to reuse\n// elements.\nlet displayedItems = [];\n\nfunction displayItems(spec, totals, ignore) {\n    displayedItems = displayedItems.slice(0, totals.topo.length);\n    while (displayedItems.length < totals.topo.length) {\n        displayedItems.push({});\n    }\n    let totalAveragePower = zero;\n    let totalPeakPower = zero;\n    let powerShardsUsed = 0;\n    for (let i = 0; i < totals.topo.length; i += 1) {\n        const recipe = totals.topo[i];\n        const display = displayedItems[i];\n        const rate = totals.rates.get(recipe);\n        const item = recipe.product.item;\n        const itemRate = rate.mul(recipe.gives(item));\n        const overclock = spec.getOverclock(recipe);\n        const overclockString = overclock.mul(Rational.fromFloat(100)).toString();\n        const { average, peak } = spec.getPowerUsage(recipe, rate, totals.topo.length);\n        totalAveragePower = totalAveragePower.add(average);\n        totalPeakPower = totalPeakPower.add(peak);\n        display.item = item;\n        display.itemRate = itemRate;\n        display.recipe = recipe;\n        display.ignore = ignore.has(recipe);\n        display.rate = rate;\n        display.building = spec.getBuilding(recipe);\n        display.count = spec.getCount(recipe, rate);\n        display.overclock = overclockString;\n        display.powerShardCount = display.ignore ? 0 : Math.ceil(Math.max(overclock.toFloat() - 1, 0) / 0.5);\n        powerShardsUsed += display.powerShardCount;\n        display.average = average;\n        display.peak = peak;\n    }\n\n    const headers = [\n        new Header(`items/${ spec.format.rateName }`, 2),\n        new Header('belts', 2),\n        new Header('buildings', 2),\n        new Header('overclock', powerShardsUsed ? 3 : 1),\n        new Header('power', 1),\n    ];\n    let totalCols = 0;\n    for (const header of headers) {\n        totalCols += header.colspan;\n    }\n\n    const table = select('table#totals');\n\n    const headerRow = table.selectAll('thead tr').selectAll('th')\n        .data(headers);\n    headerRow.exit().remove();\n    headerRow.join('th')\n        .text(d => d.text)\n        .attr('colspan', d => d.colspan);\n\n    // create missing rows\n    const rows = table.selectAll('tbody').selectAll('tr')\n        .data(displayedItems);\n    rows.exit().remove();\n    let row = rows.enter()\n        .append('tr')\n        .classed('display-row', true);\n    // items/m\n    row.append('td')\n        .append('img')\n        .classed('icon item-icon', true)\n        .attr('width', 32)\n        .attr('height', 32)\n        .on('click', toggleIgnoreHandler);\n    row.append('td')\n        .classed('right-align', true)\n        .append('tt')\n        .classed('item-rate', true);\n    // belts\n    const beltCell = row.append('td')\n        .classed('pad', true);\n    beltCell.append('img')\n        .classed('icon belt-icon', true)\n        .attr('width', 32)\n        .attr('height', 32);\n    beltCell.append(() => new Text(' \\u00d7'));\n    row.append('td')\n        .classed('right-align', true)\n        .append('tt')\n        .classed('belt-count', true);\n    // buildings\n    const buildingCell = row.append('td')\n        .classed('pad building', true);\n    buildingCell.append('img')\n        .classed('icon building-icon', true)\n        .attr('width', 32)\n        .attr('height', 32);\n    buildingCell.append(() => new Text(' \\u00d7'));\n    row.append('td')\n        .classed('right-align building', true)\n        .append('tt')\n        .classed('building-count', true);\n    /*\n    row.filter(d => d.building === null)\n        .append(\"td\")\n            .attr(\"colspan\", 4)\n    */\n    // overclock\n    const overclockCell = row.append('td')\n        .classed('pad building overclock', true);\n    overclockCell.append('input')\n        .classed('overclock', true)\n        .attr('type', 'number')\n        .attr('title', '')\n        .attr('min', 1)\n        .attr('max', 250)\n        .on('input', changeOverclock);\n    overclockCell.append(() => new Text('%'));\n\n    // power\n    row.append('td')\n        .classed('right-align pad building', true)\n        .append('tt')\n        .classed('power', true);\n\n    // update rows\n    row = table.select('tbody').selectAll('tr')\n        .classed('nobuilding', d => d.building === null);\n    row.selectAll('img.item-icon')\n        .classed('ignore', d => d.ignore)\n        .attr('src', d => d.item.iconPath())\n        .attr('title', d => d.item.name);\n    row.selectAll('tt.item-rate')\n        .text(d => spec.format.alignRate(d.itemRate));\n    row.selectAll('img.belt-icon')\n        .attr('src', spec.belt.iconPath())\n        .attr('title', spec.belt.name);\n    row.selectAll('tt.belt-count')\n        .text(d => spec.format.alignCount(spec.getBeltCount(d.itemRate)));\n    const buildingRow = row.filter(d => d.building !== null);\n    buildingRow.selectAll('img.building-icon')\n        .attr('src', d => d.building.iconPath())\n        .attr('title', d => d.building.name);\n    buildingRow.selectAll('tt.building-count')\n        .text(d => spec.format.alignCount(d.count));\n    buildingRow.selectAll('input.overclock')\n        .attr('value', d => d.overclock);\n\n    // If power shards are used at all...\n    if (powerShardsUsed) {\n        // ...if the table's power shard column is \"collapsed\"...\n        if (table.classed('power-shard-collapsed')) {\n            const powerShard = spec.items.get('power-shard');\n\n            // ...insert a power shard cell after each overclock cell:\n            const powerShardCell = buildingRow.insert('td', 'td.overclock + *')\n                .classed('pad building power-shard power-shard-icon', true);\n            powerShardCell.append('img')\n                .classed('icon', true)\n                .attr('src', powerShard.iconPath())\n                .attr('title', powerShard.name)\n                .attr('width', 32)\n                .attr('height', 32);\n            powerShardCell.append(() => new Text(' \\u00d7'));\n\n            buildingRow.insert('td', 'td.power-shard-icon + *')\n                .classed('right-align building power-shard', true)\n                .append('tt')\n                .classed('power-shard-count', true);\n\n            // ...mark the table's power shard column \"uncollapsed\":\n            table.classed('power-shard-collapsed', false);\n        }\n\n        // ...update the counts of each power shard cell, and hide any power\n        // shard cell with a count of 0:\n        buildingRow.selectAll('tt.power-shard-count').text(d => d.powerShardCount);\n        buildingRow.selectAll('.power-shard').classed('hide-power-shard', d => !d.powerShardCount);\n    } else {\n        // Otherwise, remove all power shard cells, and mark the table's power\n        // shard column \"collapsed\":\n        buildingRow.selectAll('.power-shard').remove();\n        table.classed('power-shard-collapsed', true);\n    }\n\n    buildingRow.selectAll('tt.power')\n        .text(d => `${ spec.format.alignCount(d.average) } MW`);\n    buildingRow.selectAll('.building')\n        .classed('hide-building', d => d.ignore);\n\n    const totalPower = [totalAveragePower, totalPeakPower];\n    const footerPowerRow = table.selectAll('tfoot tr.power');\n    footerPowerRow.select('td.label')\n        .attr('colspan', totalCols - 1);\n    footerPowerRow.select('tt')\n        .data(totalPower)\n        .text(d => `${ spec.format.alignCount(d) } MW`);\n\n    const footerPowerShardRow = table.select('tfoot tr.power-shard');\n    footerPowerShardRow.select('td.label')\n        .attr('colspan', totalCols - 1);\n    footerPowerShardRow.select('tt')\n        .text(powerShardsUsed);\n}\n\nexport default displayItems;\n","import * as d3 from 'd3';\n\nconst dropdownLocal = d3.local();\n\nfunction toggleDropdown() {\n    const dropdownNode = dropdownLocal.get(this);\n    const classes = dropdownNode.classList;\n    if (classes.contains('open')) {\n        classes.remove('open');\n    } else {\n        const node = d3.select(dropdownNode);\n        const selected = node.select('input:checked + label');\n        node.select('.spacer')\n            .style('width', selected.style('width'))\n            .style('height', selected.style('height'));\n        classes.add('open');\n    }\n}\n\n// Appends a dropdown to the selection, and returns a selection over the div\n// for the content of the dropdown.\nexport function makeDropdown(selector) {\n    const d = selector.append('div')\n        .classed('dropdownWrapper', true)\n        .each(function () { dropdownLocal.set(this, this); });\n    d.append('div')\n        .classed('clicker', true)\n        .on('click', toggleDropdown);\n    const dropdownInner = d.append('div')\n        .classed('dropdown', true)\n        .on('click', toggleDropdown);\n    d.append('div')\n        .classed('spacer', true);\n    return dropdownInner;\n}\n\nlet inputId = 0;\nlet labelFor = 0;\n\n// Appends a dropdown input to the selection.\n//\n// Args:\n//   name: Should be unique to the dropdown.\n//   checked: Should be true when a given input is the selected one.\n//   callback: Called when the selected item is changed.\n//\n// Returns:\n//   Selection with the input's label.\nexport function addInputs(selector, name, checked, callback) {\n    selector.append('input')\n        .on('change', function (d, i, nodes) {\n            toggleDropdown.call(this);\n            callback.call(this, d, i, nodes);\n        })\n        .attr('id', () => `input-${ inputId += 1 }`)\n        .attr('name', name)\n        .attr('type', 'radio')\n        .property('checked', checked);\n    const label = selector.append('label')\n        .attr('for', () => `input-${ labelFor += 1 }`);\n    return label;\n}\n\n// Wrapper around makeDropdown/addInputs to create an input for each item in\n// data.\nexport function dropdown(selector, data, name, checked, callback) {\n    const dd = makeDropdown(selector)\n        .selectAll('div')\n        .data(data)\n        .join('div');\n    return addInputs(dd, name, checked, callback);\n}\n","import { create } from 'd3';\n\nimport { makeDropdown, addInputs } from './dropdown';\nimport { spec } from './factory';\nimport { Rational, zero, one } from './rational';\n\nconst SELECTED_INPUT = 'selected';\n\n// events\n\nfunction itemHandler(target) {\n    return item => {\n        target.itemKey = item.key;\n        target.item = item;\n        spec.updateSolution();\n    };\n}\n\nfunction removeHandler(target) {\n    return () => {\n        spec.removeTarget(target);\n        spec.updateSolution();\n    };\n}\n\nfunction changeBuildingCountHandler(target) {\n    return () => {\n        target.buildingsChanged();\n        spec.updateSolution();\n    };\n}\n\nfunction changeRateHandler(target) {\n    return () => {\n        target.rateChanged();\n        spec.updateSolution();\n    };\n}\n\nlet targetCount = 0;\n\nclass BuildTarget {\n    constructor(index, itemKey, item, tiers) {\n        this.index = index;\n        this.itemKey = itemKey;\n        this.item = item;\n        this.changedBuilding = true;\n        this.buildings = one;\n        this.rate = zero;\n\n        const element = create('li')\n            .classed('target', true);\n        element.append('button')\n            .classed('targetButton ui', true)\n            .text('x')\n            .attr('title', 'Remove this item.')\n            .on('click', removeHandler(this));\n        this.element = element.node();\n\n        const dropdown = makeDropdown(element);\n        const itemSpan = dropdown.selectAll('div')\n            .data(tiers)\n            .join('div')\n            .selectAll('span')\n            .data(d => d)\n            .join('span');\n        const itemLabel = addInputs(\n            itemSpan,\n            `target-${ targetCount }`,\n            d => d === item,\n            itemHandler(this),\n        );\n\n        itemLabel.append('img')\n            .classed('icon', true)\n            .attr('src', d => d.iconPath())\n            // .attr(\"width\", 32)\n            // .attr(\"height\", 32)\n            .attr('title', d => d.name);\n\n        targetCount += 1;\n\n        this.buildingLabel = element.append('label')\n            .classed(SELECTED_INPUT, true)\n            .text(' Buildings: ')\n            .node();\n\n        this.buildingInput = element.append('input')\n            .on('change', changeBuildingCountHandler(this))\n            .attr('type', 'text')\n            .attr('value', 1)\n            .attr('size', 3)\n            .attr('title', 'Enter a value to specify the number of buildings. The rate will be determined based on the number of items a single building can make.')\n            .node();\n\n        this.rateLabel = element.append('label')\n            .node();\n        this.setRateLabel();\n\n        this.rateInput = element.append('input')\n            .on('change', changeRateHandler(this))\n            .attr('type', 'text')\n            .attr('value', '')\n            .attr('size', 5)\n            .attr('title', 'Enter a value to specify the rate. The number of buildings will be determined based on the rate.')\n            .node();\n    }\n\n    setRateLabel() {\n        this.rateLabel.textContent = ` Items/${ spec.format.longRate }: `;\n    }\n\n    getRate() {\n        this.setRateLabel();\n        let rate = zero;\n        const recipe = spec.getRecipe(this.item);\n        if (recipe.category === null && this.changedBuilding) {\n            this.rateChanged();\n        }\n        let baseRate = spec.getRecipeRate(recipe);\n        if (baseRate !== null) {\n            baseRate = baseRate.mul(recipe.gives(this.item));\n        }\n        if (this.changedBuilding) {\n            rate = baseRate.mul(this.buildings);\n            this.rateInput.value = spec.format.rate(rate);\n        } else {\n            rate = this.rate;\n            if (baseRate !== null) {\n                const count = rate.div(baseRate);\n                this.buildingInput.value = spec.format.count(count);\n            } else {\n                this.buildingInput.value = 'N/A';\n            }\n            this.rateInput.value = spec.format.rate(rate);\n        }\n        return rate;\n    }\n\n    buildingsChanged() {\n        this.changedBuilding = true;\n        this.buildingLabel.classList.add(SELECTED_INPUT);\n        this.rateLabel.classList.remove(SELECTED_INPUT);\n        this.buildings = Rational.fromString(this.buildingInput.value);\n        this.rate = zero;\n        this.rateInput.value = '';\n    }\n\n    setBuildings(count) {\n        this.buildingInput.value = count;\n        this.buildingsChanged();\n    }\n\n    rateChanged() {\n        this.changedBuilding = false;\n        this.buildingLabel.classList.remove(SELECTED_INPUT);\n        this.rateLabel.classList.add(SELECTED_INPUT);\n        this.buildings = zero;\n        this.rate = Rational.fromString(this.rateInput.value).div(spec.format.rateFactor);\n        this.buildingInput.value = '';\n    }\n\n    setRate(rate) {\n        this.rateInput.value = rate;\n        this.rateChanged();\n    }\n}\n\nexport default BuildTarget;\n","import { zero } from './rational';\n\nclass Totals {\n    constructor() {\n        this.rates = new Map();\n        this.heights = new Map();\n        this.topo = [];\n    }\n\n    add(recipe, rate) {\n        this.topo.push(recipe);\n        this.rates.set(recipe, (this.rates.get(recipe) || zero).add(rate));\n    }\n\n    updateHeight(recipe, height) {\n        const knownHeight = this.heights.get(recipe);\n        if (knownHeight === undefined || knownHeight < height) {\n            this.heights.set(recipe, height);\n        }\n    }\n\n    combine(other) {\n        let newTopo = [];\n        for (const recipe of this.topo) {\n            if (!other.rates.has(recipe)) {\n                newTopo.push(recipe);\n            }\n        }\n        newTopo = newTopo.concat(other.topo);\n        for (const [recipe, rate] of other.rates) {\n            this.add(recipe, rate);\n        }\n        this.topo = newTopo;\n        for (const [recipe, height] of other.heights) {\n            this.updateHeight(recipe, height + 1);\n        }\n    }\n}\n\nexport default Totals;\n","class Ingredient {\n    constructor(item, amount) {\n        this.item = item;\n        this.amount = amount;\n    }\n}\n\nexport default Ingredient;\n","import * as d3Base from 'd3';\nimport * as d3Sankey from 'd3-sankey';\n\nimport Ingredient from './Ingredient';\nimport { toggleIgnoreHandler } from './events';\nimport { spec } from './factory';\nimport { Rational, zero, one } from './rational';\n\n// FIXME: this is cludgey as hell\nconst d3 = {\n    ...d3Base,\n    ...d3Sankey\n};\n\nconst iconSize = 48;\nconst nodePadding = 20;\nconst columnWidth = 150;\nconst maxNodeHeight = 175;\n\nfunction makeGraph(totals, targets, ignore) {\n    const outputs = [];\n    const rates = new Map();\n    for (const target of targets) {\n        let rate = rates.get(target.item);\n        if (rate === undefined) {\n            rate = zero;\n        }\n        rate = rate.add(target.getRate());\n        rates.set(target.item, rate);\n    }\n    for (const [item, rate] of rates) {\n        const ing = new Ingredient(item, rate);\n        outputs.push(ing);\n    }\n    const nodes = [{\n        name: 'output',\n        ingredients: outputs,\n        building: null,\n        count: zero,\n        rate: null,\n        ignore: false,\n    }];\n    const nodeMap = new Map();\n    nodeMap.set('output', nodes[0]);\n\n    for (const [recipe, rate] of totals.rates) {\n        const building = spec.getBuilding(recipe);\n        const count = spec.getCount(recipe, rate);\n        const node = {\n            name: recipe.name,\n            ingredients: recipe.ingredients,\n            recipe: recipe,\n            building: building,\n            count: count,\n            rate: rate,\n            ignore: ignore.has(recipe),\n        };\n        nodes.push(node);\n        nodeMap.set(recipe.name, node);\n    }\n\n    const links = [];\n    for (const node of nodes) {\n        if (!node.ignore) {\n            for (const ing of node.ingredients) {\n                let rate;\n                if (node.name === 'output') {\n                    rate = ing.amount;\n                } else {\n                    rate = totals.rates.get(node.recipe).mul(ing.amount);\n                }\n                for (const subRecipe of ing.item.recipes) {\n                    if (totals.rates.has(subRecipe)) {\n                        const link = {\n                            source: nodeMap.get(subRecipe.name),\n                            target: node,\n                            value: rate.toFloat(),\n                            rate: rate,\n                        };\n                        const belts = [];\n                        const beltCountExact = spec.getBeltCount(rate);\n                        const beltCount = beltCountExact.toFloat();\n                        for (let j = one; j.less(beltCountExact); j = j.add(one)) {\n                            const i = j.toFloat();\n                            belts.push({ link, i, beltCount });\n                        }\n                        link.belts = belts;\n                        links.push(link);\n                    }\n                }\n            }\n        }\n    }\n    return { links, nodes };\n}\n\nfunction recipeValue(recipe, rate, ignore) {\n    let inputValue = zero;\n    if (!ignore.has(recipe)) {\n        for (const ing of recipe.ingredients) {\n            inputValue = inputValue.add(rate.mul(ing.amount));\n        }\n    }\n    const outputValue = rate.mul(recipe.product.amount);\n    if (inputValue.less(outputValue)) {\n        return outputValue;\n    }\n    return inputValue;\n}\n\nfunction rankHeightEstimate(rank, valueFactor) {\n    let total = nodePadding * (rank.length - 1);\n    for (const value of rank) {\n        total += value.mul(valueFactor).toFloat();\n    }\n    return total;\n}\n\nfunction getRateString(d) {\n    return d.rate === null ? '' : `\\u00d7 ${ spec.format.rate(d.rate) }/${ spec.format.rateName }`;\n}\n\nfunction getMachineCountString(d) {\n    console.assert(!d.count.isZero(), \"Items that aren't produced through machines can't have a machine count!\");\n    return `\\u00d7 ${ spec.format.count(d.count) }`;\n}\n\nfunction getOverclockString(d) {\n    console.assert(!d.count.isZero(), \"Items that aren't produced through machines (machine count == 0) can't have an overclock value!\");\n    return `${ spec.getOverclock(d.recipe).mul(Rational.fromFloat(100)).toString() }%`;\n}\n\n// This is basically an educated guess, but seems to match whatever Chrome and\n// Firefox do pretty well.\nfunction beltPath(d) {\n    const x0 = d.link.source.x1;\n    const y0 = d.link.y0;\n    const y0top = y0 - d.link.width / 2;\n    const x1 = d.link.target.x0;\n    const y1 = d.link.y1;\n    const y1top = y1 - d.link.width / 2;\n    const mid = (x1 - x0) / 2;\n    const slope = (y1 - y0) / (x1 - x0);\n\n    const dy = d.link.width / d.beltCount;\n    const yOffset = d.i * dy;\n    const y0belt = y0top + yOffset;\n    const y1belt = y1top + yOffset;\n\n    const midAdjust = (d.link.width / 2 - yOffset) * slope;\n    const xControl = x0 + mid + midAdjust;\n    return `M ${ x0 },${ y0belt } C ${ xControl },${ y0belt },${ xControl },${ y1belt },${ x1 },${ y1belt }`;\n}\n\nconst color = d3.scaleOrdinal(d3.schemeCategory10);\n\nfunction renderTotals(totals, targets, ignore) {\n    const data = makeGraph(totals, targets, ignore);\n\n    let maxRank = 0;\n    const ranks = new Map();\n    let largestValue = zero;\n    for (const [recipe, rank] of totals.heights) {\n        let rankList = ranks.get(rank);\n        if (rankList === undefined) {\n            rankList = [];\n            ranks.set(rank, rankList);\n        }\n        if (rank > maxRank) {\n            maxRank = rank;\n        }\n        const rate = totals.rates.get(recipe);\n        const value = recipeValue(recipe, rate, ignore);\n        if (largestValue.less(value)) {\n            largestValue = value;\n        }\n        rankList.push(value);\n    }\n    if (largestValue.isZero()) {\n        return;\n    }\n    const beltDensity = maxNodeHeight / spec.getBeltCount(largestValue).toFloat();\n    // The width of the display is the number of ranks, times the width of each\n    // rank, plus a small constant for the output node.\n    let maxTextWidth = 0;\n    const testSVG = d3.select('body').append('svg');\n    for (const node of data.nodes) {\n        let text = testSVG.append('text');\n        if (node.count.isZero()) {\n            text = text.text(getRateString(node));\n        } else {\n            text.append('tspan').attr('x', 0).text(getMachineCountString(node));\n            text.append('tspan').attr('x', 0).text(getOverclockString(node));\n        }\n        const textWidth = text.node().getBBox().width;\n        text.remove();\n        if (textWidth > maxTextWidth) {\n            maxTextWidth = textWidth;\n        }\n    }\n    testSVG.remove();\n    const nodeWidth = iconSize + maxTextWidth + 4;\n    const width = maxRank * (nodeWidth + columnWidth) + nodeWidth;\n    // The height of the display is normalized by the height of the tallest box\n    // in the graph. We define it to be (approximately) maxNodeHeight pixels\n    // high.\n    const valueFactor = Rational.fromFloat(maxNodeHeight).div(largestValue);\n    let largestEstimate = 0;\n    // TODO: fix this\n    // eslint-disable-next-line\n    for (const [rank, rankList] of ranks) {\n        const estimate = rankHeightEstimate(rankList, valueFactor);\n        if (estimate > largestEstimate) {\n            largestEstimate = estimate;\n        }\n    }\n    const height = largestEstimate;\n\n    const svg = d3.select('svg#graph')\n        .attr('viewBox', `0,0,${ width + 20 },${ height + 20 }`)\n        .style('width', width + 20)\n        .style('height', height + 20);\n\n    svg.selectAll('g').remove();\n\n    const sankey = d3.sankey()\n        .nodeWidth(nodeWidth)\n        .nodePadding(nodePadding)\n        .nodeAlign(d3.sankeyRight)\n        .extent([[10, 10], [width + 10, height + 10]]);\n    const { nodes, links } = sankey(data);\n\n    // Node rects\n    const rects = svg.append('g')\n        .classed('nodes', true)\n        .selectAll('rect')\n        .data(nodes)\n        .join('g')\n        .classed('node', true);\n\n    rects.append('rect')\n        .attr('x', d => d.x0)\n        .attr('y', d => d.y0)\n        .attr('height', d => d.y1 - d.y0)\n        .attr('width', d => d.x1 - d.x0)\n        .attr('fill', d => d3.color(color(d.name)).darker());\n    rects.filter(d => d.name !== 'output')\n        .append('image')\n        .classed('ignore', d => ignore.has(d.recipe))\n        .attr('x', d => d.x0 + 2)\n        .attr('y', d => d.y0 + (d.y1 - d.y0) / 2 - (iconSize / 2))\n        .attr('height', iconSize)\n        .attr('width', iconSize)\n        .attr('xlink:href', d => d.recipe.iconPath());\n\n    // For nodes without an associated machine, display the rate on a single line:\n    rects.filter(d => d.count.isZero())\n        .append('text')\n        .attr('x', d => d.x0 + iconSize + 2)\n        .attr('y', d => (d.y0 + d.y1) / 2)\n        .attr('dy', '0.35em')\n        .attr('text-anchor', 'start')\n        .text(getRateString);\n\n    // For nodes with an associated machine, display the machine count on one\n    // line, and the overclock rate on the next line:\n    const twoLineText = rects.filter(d => !d.count.isZero())\n        .append('text')\n        .attr('x', d => d.x0 + iconSize + 2)\n        .attr('y', d => (d.y0 + d.y1) / 2)\n        .attr('dy', '-0.15em') // (0.35em minus half a line's height (0.5em), maintaining vertical alignment)\n        .attr('text-anchor', 'start');\n    twoLineText.append('tspan')\n        .text(getMachineCountString);\n    twoLineText.append('tspan') // (\"x\" and \"dy\" are used to render the text on the next line)\n        .attr('x', d => d.x0 + iconSize + 2)\n        .attr('dy', '1em')\n        .text(getOverclockString);\n\n    // Link paths\n    const link = svg.append('g')\n        .classed('links', true)\n        .selectAll('g')\n        .data(links)\n        .join('g');\n    // .style(\"mix-blend-mode\", \"multiply\")\n    link.append('path')\n        .attr('fill', 'none')\n        .attr('stroke-opacity', 0.3)\n        .attr('d', d3.sankeyLinkHorizontal())\n        .attr('stroke', d => color(d.source.name))\n        .attr('stroke-width', d => Math.max(1, d.width));\n    // Don't draw belts if we have less than three pixels per belt.\n    if (beltDensity >= 3) {\n        link.append('g')\n            .selectAll('path')\n            .data(d => d.belts)\n            .join('path')\n            .attr('fill', 'none')\n            .attr('stroke-opacity', 0.3)\n            .attr('d', beltPath)\n            .attr('stroke', d => color(d.link.source.name))\n            .attr('stroke-width', 1);\n    }\n    link.append('title')\n        .text(d => `${ d.source.name } \\u2192 ${ d.target.name }\\n${ spec.format.rate(d.rate) }`);\n    link.append('text')\n        .attr('x', d => d.source.x1 + 6)\n        .attr('y', d => d.y0)\n        .attr('dy', '0.35em')\n        .attr('text-anchor', 'start')\n        .text(d => `${ spec.format.rate(d.rate) }/${ spec.format.rateName }`);\n\n    // Overlay transparent rect on top of each node, for click events.\n    const rectElements = svg.selectAll('g.node').nodes();\n    const overlayData = [];\n    // Flash the graph tab to be visible, so that the graph is laid out and\n    // the BBox is not empty.\n    const graphTab = d3.select('#graph_tab');\n    const origDisplay = d3.style(graphTab.node(), 'display');\n    graphTab.style('display', 'block');\n    for (let i = 0; i < nodes.length; i += 1) {\n        const rect = rectElements[i].getBBox();\n        const node = nodes[i];\n        const recipe = node.recipe;\n        if (recipe !== undefined) {\n            overlayData.push({ rect, node, recipe });\n        }\n    }\n    graphTab.style('display', origDisplay);\n    svg.append('g')\n        .classed('overlay', true)\n        .selectAll('rect')\n        .data(overlayData)\n        .join('rect')\n        .attr('stroke', 'none')\n        .attr('fill', 'transparent')\n        .attr('x', d => d.rect.x)\n        .attr('y', d => d.rect.y)\n        .attr('width', d => d.rect.width)\n        .attr('height', d => d.rect.height)\n        .on('click', toggleIgnoreHandler)\n        .append('title')\n        .text(d => d.node.name + (d.node.count.isZero() ? '' : `\\n${ d.node.building.name } ${ getMachineCountString(d.node) }\\n${ getOverclockString(d.node) }`));\n}\n\nexport default renderTotals;\n","import * as d3 from 'd3';\n\nimport { Formatter } from './align';\nimport displayItems from './display';\nimport { formatSettings } from './fragment';\nimport {\n    Rational, zero, half, one\n} from './rational';\nimport BuildTarget from './target';\nimport Totals from './totals';\nimport renderTotals from './visualize';\n\nconst DEFAULT_ITEM_KEY = 'supercomputer';\n\nconst minerCategories = new Set(['mineral', 'oil', 'water']);\n\nexport const resourcePurities = [\n    { key: '0', name: 'Impure', factor: half },\n    { key: '1', name: 'Normal', factor: one },\n    { key: '2', name: 'Pure', factor: Rational.fromFloat(2) },\n];\n\nexport const DEFAULT_PURITY = resourcePurities[1];\n\nexport const DEFAULT_BELT = 'belt1';\n\nclass FactorySpecification {\n    constructor() {\n        // Game data definitions\n        this.items = null;\n        this.recipes = null;\n        this.buildings = null;\n        this.belts = null;\n\n        this.itemTiers = [];\n\n        this.buildTargets = [];\n\n        // Map resource recipe to {miner, purity}\n        this.miners = new Map();\n        this.minerSettings = new Map();\n\n        // Map recipe to overclock factor\n        this.overclock = new Map();\n\n        // Map item to recipe\n        this.altRecipes = new Map();\n\n        this.belt = null;\n\n        this.ignore = new Set();\n\n        this.format = new Formatter();\n    }\n\n    setData(items, recipes, buildings, belts) {\n        this.items = items;\n        const tierMap = new Map();\n        // TODO: fix this\n        // eslint-disable-next-line\n        for (const [itemKey, item] of items) {\n            let tier = tierMap.get(item.tier);\n            if (tier === undefined) {\n                tier = [];\n                tierMap.set(item.tier, tier);\n            }\n            tier.push(item);\n        }\n        this.itemTiers = [];\n        // TODO: fix this\n        // eslint-disable-next-line\n        for (const [tier, tierItems] of tierMap) {\n            this.itemTiers.push(tierItems);\n        }\n        this.itemTiers.sort((a, b) => a[0].tier - b[0].tier);\n        this.recipes = recipes;\n        this.buildings = new Map();\n        for (const building of buildings) {\n            let category = this.buildings.get(building.category);\n            if (category === undefined) {\n                category = [];\n                this.buildings.set(building.category, category);\n            }\n            category.push(building);\n            if (minerCategories.has(building.category)) {\n                this.miners.set(building.key, building);\n            }\n        }\n        this.belts = belts;\n        this.belt = belts.get(DEFAULT_BELT);\n        this.initMinerSettings();\n    }\n\n    initMinerSettings() {\n        this.minerSettings = new Map();\n        // TODO: fix this\n        // eslint-disable-next-line\n        for (const [recipeKey, recipe] of this.recipes) {\n            if (minerCategories.has(recipe.category)) {\n                const miners = this.buildings.get(recipe.category);\n                // Default to miner mk1.\n                const miner = miners[0];\n                // Default to normal purity.\n                const purity = DEFAULT_PURITY;\n                this.minerSettings.set(recipe, { miner, purity });\n            }\n        }\n    }\n\n    getRecipe(item) {\n        // TODO: Alternate recipes.\n        const recipe = this.altRecipes.get(item);\n        if (recipe === undefined) {\n            return item.recipes[0];\n        }\n        return recipe;\n    }\n\n    setRecipe(recipe) {\n        const item = recipe.product.item;\n        if (recipe === item.recipes[0]) {\n            this.altRecipes.delete(item);\n        } else {\n            this.altRecipes.set(item, recipe);\n        }\n    }\n\n    getBuilding(recipe) {\n        if (recipe.category === null) {\n            return null;\n        } if (this.minerSettings.has(recipe)) {\n            return this.minerSettings.get(recipe).miner;\n        }\n        // NOTE: Only miners offer alternative buildings. May need to\n        // revisit this if higher tiers of constructors are added.\n        return this.buildings.get(recipe.category)[0];\n    }\n\n    getOverclock(recipe) {\n        return this.overclock.get(recipe) || one;\n    }\n\n    setOverclock(recipe, overclock) {\n        if (overclock.equal(one)) {\n            this.overclock.delete(recipe);\n        } else {\n            this.overclock.set(recipe, overclock);\n        }\n    }\n\n    // Returns the recipe-rate at which a single building can produce a recipe.\n    // Returns null for recipes that do not have a building.\n    getRecipeRate(recipe) {\n        const building = this.getBuilding(recipe);\n        if (building === null) {\n            return null;\n        }\n        return building.getRecipeRate(this, recipe);\n    }\n\n    getResourcePurity(recipe) {\n        return this.minerSettings.get(recipe).purity;\n    }\n\n    setMiner(recipe, miner, purity) {\n        this.minerSettings.set(recipe, { miner, purity });\n    }\n\n    getCount(recipe, rate) {\n        const building = this.getBuilding(recipe);\n        if (building === null) {\n            return zero;\n        }\n        return building.getCount(this, recipe, rate);\n    }\n\n    getBeltCount(rate) {\n        return rate.div(this.belt.rate);\n    }\n\n    // getPowerUsage(recipe, rate, itemCount) {\n    getPowerUsage(recipe, rate) {\n        const building = this.getBuilding(recipe);\n        if (building === null || this.ignore.has(recipe)) {\n            return { average: zero, peak: zero };\n        }\n        const count = this.getCount(recipe, rate);\n        let average = building.power.mul(count);\n        let peak = building.power.mul(count.ceil());\n        const overclock = this.overclock.get(recipe);\n        if (overclock !== undefined) {\n            // The result of this exponent will typically be irrational, so\n            // this approximation is a necessity. Because overclock is limited\n            // to the range [0.01, 2.50], any imprecision introduced by this\n            // approximation is minimal (and is probably less than is present\n            // in the game itself).\n            const overclockFactor = Rational.fromFloat(overclock.toFloat() ** 1.6);\n            average = average.mul(overclockFactor);\n            peak = peak.mul(overclockFactor);\n        }\n        return { average, peak };\n    }\n\n    addTarget(itemKey = DEFAULT_ITEM_KEY) {\n        const item = this.items.get(itemKey);\n        const target = new BuildTarget(this.buildTargets.length, itemKey, item, this.itemTiers);\n        this.buildTargets.push(target);\n        d3.select('#targets').insert(() => target.element, '#plusButton');\n        return target;\n    }\n\n    removeTarget(target) {\n        this.buildTargets.splice(target.index, 1);\n        for (let i = target.index; i < this.buildTargets.length; i += 1) {\n            this.buildTargets[i].index -= 1;\n        }\n        d3.select(target.element).remove();\n    }\n\n    toggleIgnore(recipe) {\n        if (this.ignore.has(recipe)) {\n            this.ignore.delete(recipe);\n        } else {\n            this.ignore.add(recipe);\n        }\n    }\n\n    solve() {\n        const totals = new Totals();\n        for (const target of this.buildTargets) {\n            const subtotals = target.item.produce(this, target.getRate(), this.ignore);\n            totals.combine(subtotals);\n        }\n        return totals;\n    }\n\n    setHash = () => {\n        window.location.hash = `#${ formatSettings() }`;\n    }\n\n    updateSolution() {\n        const totals = this.solve();\n        displayItems(this, totals, this.ignore);\n        renderTotals(totals, this.buildTargets, this.ignore);\n        this.setHash();\n    }\n}\n\nexport const spec = new FactorySpecification();\nwindow.spec = spec;\n","import { DEFAULT_RATE, DEFAULT_RATE_PRECISION, DEFAULT_COUNT_PRECISION } from './align';\nimport { DEFAULT_TAB, currentTab } from './events';\nimport { spec, DEFAULT_PURITY, DEFAULT_BELT } from './factory';\nimport { Rational } from './rational';\n\nexport function formatSettings() {\n    let settings = '';\n    if (currentTab !== DEFAULT_TAB) {\n        settings += `tab=${ currentTab }&`;\n    }\n    if (spec.format.rateName !== DEFAULT_RATE) {\n        settings += `rate=${ spec.format.rateName }&`;\n    }\n    if (spec.format.ratePrecision !== DEFAULT_RATE_PRECISION) {\n        settings += `rp=${ spec.format.ratePrecision }&`;\n    }\n    if (spec.format.countPrecision !== DEFAULT_COUNT_PRECISION) {\n        settings += `cp=${ spec.format.countPrecision }&`;\n    }\n    if (spec.belt.key !== DEFAULT_BELT) {\n        settings += `belt=${ spec.belt.key }&`;\n    }\n\n    settings += 'items=';\n    const targetStrings = [];\n    for (const target of spec.buildTargets) {\n        let targetString = '';\n        if (target.changedBuilding) {\n            targetString = `${ target.itemKey }:f:${ target.buildingInput.value }`;\n        } else {\n            targetString = `${ target.itemKey }:r:${ target.rate.mul(spec.format.rateFactor).toString() }`;\n        }\n        targetStrings.push(targetString);\n    }\n    settings += targetStrings.join(',');\n\n    const ignore = [];\n    for (const recipe of spec.ignore) {\n        ignore.push(recipe.key);\n    }\n    if (ignore.length > 0) {\n        settings += `&ignore=${ ignore.join(',') }`;\n    }\n\n    const overclock = [];\n    for (const [recipe, factor] of spec.overclock) {\n        const s = factor.mul(Rational.fromFloat(100)).toString();\n        overclock.push(`${ recipe.key }:${ s }`);\n    }\n    if (overclock.length > 0) {\n        settings += `&overclock=${ overclock.join(',') }`;\n    }\n\n    const alt = [];\n    // TODO: fix this\n    // eslint-disable-next-line\n    for (const [item, recipe] of spec.altRecipes) {\n        alt.push(recipe.key);\n    }\n    if (alt.length > 0) {\n        settings += `&alt=${ alt.join(',') }`;\n    }\n\n    const minerStrings = [];\n    for (const [recipe, { miner, purity }] of spec.minerSettings) {\n        const miners = spec.buildings.get(recipe.category);\n        const defaultMiner = miners[0];\n        if (miner !== defaultMiner || purity !== DEFAULT_PURITY) {\n            const s = `${ recipe.key }:${ miner.key }:${ purity.key }`;\n            minerStrings.push(s);\n        }\n    }\n    if (minerStrings.length > 0) {\n        settings += `&miners=${ minerStrings.join(',') }`;\n    }\n\n    return settings;\n}\n\nexport function loadSettings(fragment) {\n    const settings = new Map();\n    const subFragment = fragment.substr(1);\n    const pairs = subFragment.split('&');\n    for (const pair of pairs) {\n        const i = pair.indexOf('=');\n        if (i) {\n            const name = pair.substr(0, i);\n            const value = pair.substr(i + 1);\n            settings.set(name, value);\n        }\n    }\n    return settings;\n}\n","import { select, selectAll } from 'd3';\n\nimport { spec } from './factory';\n\n// build target events\n\nexport function plusHandler() {\n    spec.addTarget();\n    spec.updateSolution();\n}\n\n// tab events\n\nexport const DEFAULT_TAB = 'graph';\n\nexport let currentTab = DEFAULT_TAB;\n\nexport function clickTab(tabName) {\n    currentTab = tabName;\n    selectAll('.tab')\n        .style('display', 'none');\n    selectAll('.tab_button')\n        .classed('active', false);\n    select(`#${ tabName }_tab`)\n        .style('display', 'block');\n    select(`#${ tabName }_button`)\n        .classed('active', true);\n    spec.setHash();\n}\n\n// shared events\n\nexport function toggleIgnoreHandler(d) {\n    spec.toggleIgnore(d.recipe);\n    spec.updateSolution();\n}\n\n// setting events\n\nexport function changeRatePrecision(event) {\n    spec.format.ratePrecision = Number(event.target.value);\n    spec.updateSolution();\n}\n\nexport function changeCountPrecision(event) {\n    spec.format.countPrecision = Number(event.target.value);\n    spec.updateSolution();\n}\n","import beltData from './data/belts.json';\n\nimport { Rational } from './rational';\n\nexport class Belt {\n    constructor(key, name, rate) {\n        this.key = key;\n        this.name = name;\n        this.rate = rate;\n    }\n\n    iconPath() {\n        return `${ process.env.PUBLIC_URL }/images/${ this.name }.png`;\n    }\n}\n\nexport function getBelts() {\n    const belts = new Map();\n    for (const belt of beltData) {\n        belts.set(belt.key_name, new Belt(\n            belt.key_name,\n            belt.name,\n            Rational.fromFloat(belt.rate).div(Rational.fromFloat(60))\n        ));\n    }\n    return belts;\n}\n","class Building {\n    constructor(key, name, category, power, max) {\n        this.key = key;\n        this.name = name;\n        this.category = category;\n        this.power = power;\n        this.max = max;\n    }\n\n    getCount(spec, recipe, rate) {\n        return rate.div(this.getRecipeRate(spec, recipe));\n    }\n\n    getRecipeRate(spec, recipe) {\n        const overclock = spec.getOverclock(recipe);\n        return recipe.time.reciprocate().mul(overclock);\n    }\n\n    iconPath() {\n        return `${ process.env.PUBLIC_URL }/images/${ this.name }.png`;\n    }\n}\n\nexport default Building;\n","import Building from './building';\n\nclass Miner extends Building {\n    constructor(key, name, category, power, baseRate) {\n        super(key, name, category, power, null);\n        this.baseRate = baseRate;\n    }\n\n    getRecipeRate(spec, recipe) {\n        const purity = spec.getResourcePurity(recipe);\n        const overclock = spec.getOverclock(recipe);\n        return this.baseRate.mul(purity.factor).mul(overclock);\n    }\n}\n\nexport default Miner;\n","import itemData from './data/items.json';\nimport Totals from './totals';\n\nexport class Item {\n    constructor(key, name, tier) {\n        this.key = key;\n        this.name = name;\n        this.tier = tier;\n        this.recipes = [];\n        this.uses = [];\n        // this.byproduct = []\n    }\n\n    addRecipe(recipe) {\n        this.recipes.push(recipe);\n    }\n\n    // addByproduct(byproduct) {\n    // this.byproduct.push(byproduct)\n    // }\n    addUse(recipe) {\n        this.uses.push(recipe);\n    }\n\n    produce(spec, rate, ignore) {\n        const totals = new Totals();\n        const recipe = spec.getRecipe(this);\n        const gives = recipe.gives(this);\n        // let byproduct = recipe.byproduct(this)\n        const newRate = rate.div(gives);\n        totals.add(recipe, newRate);\n        totals.updateHeight(recipe, 0);\n        if (ignore.has(recipe)) {\n            return totals;\n        }\n        for (const ing of recipe.ingredients) {\n            const subtotals = ing.item.produce(spec, newRate.mul(ing.amount), ignore);\n            totals.combine(subtotals);\n        }\n        return totals;\n    }\n\n    iconPath() {\n        return `${ process.env.PUBLIC_URL }/images/${ this.name }.png`;\n    }\n}\n\nexport function getItems() {\n    const items = new Map();\n    for (const d of itemData) {\n        items.set(d.key_name, new Item(d.key_name, d.name, d.tier));\n    }\n    return items;\n}\n","import Ingredient from '../Ingredient';\n\nimport { Rational } from '../rational';\n\nclass Recipe {\n    // constructor(key, name, category, time, ingredients, product, byproduct) {\n    constructor(key, name, category, time, ingredients, product) {\n        this.key = key;\n        this.name = name;\n        this.category = category;\n        this.time = time;\n        this.ingredients = ingredients;\n        for (const ing of ingredients) {\n            ing.item.addUse(this);\n        }\n        this.product = product;\n        product.item.addRecipe(this);\n        // this.byproduct = byproduct\n        // byproduct.item.addByproduct(this)\n    }\n\n    gives(item) {\n        if (this.product.item === item) {\n            return this.product.amount;\n        }\n        return null;\n    }\n\n    // byproduct(item) {\n    //    if (this.byproduct.item === item) {\n    //        return this.byproduct.amount\n    //    }\n    //    return null\n    // }\n    iconPath() {\n        return this.product.item.iconPath();\n    }\n\n    static makeRecipe(items, d) {\n        const time = Rational.fromFloat(d.time);\n        const [item_key, amount] = d.product;\n        // const [byproduct_key, byproduct_amount] = d.byproduct;\n        const item = items.get(item_key);\n        // const byproduct_item = items.get(byproduct_key);\n        const product = new Ingredient(item, Rational.fromFloat(amount));\n        // const byproduct = new Ingredient(byproduct_item, Rational.fromFloat(byproduct_amount));\n        const ingredients = [];\n        for (const [item_key, amount] of d.ingredients) {\n            const item = items.get(item_key);\n            ingredients.push(new Ingredient(item, Rational.fromFloat(amount)));\n        }\n        //    return new Recipe(d.key_name, d.name, d.category, time, ingredients, product, byproduct)\n        return new Recipe(d.key_name, d.name, d.category, time, ingredients, product);\n    }\n}\n\nexport default Recipe;\n","import Ingredient from '../Ingredient';\nimport Recipe from './Recipe';\nimport { one, zero } from '../rational';\n\nclass ResourceRecipe extends Recipe {\n    constructor(item, category) {\n        // super(item.key, item.name, category, zero, [], new Ingredient(item, one), new Ingredient(item, one))\n        super(item.key, item.name, category, zero, [], new Ingredient(item, one));\n    }\n}\n\nexport default ResourceRecipe;\n","import { select } from 'd3';\n\nimport {\n    DEFAULT_RATE, DEFAULT_RATE_PRECISION, DEFAULT_COUNT_PRECISION, longRateNames\n} from './align';\nimport { dropdown } from './dropdown';\nimport { DEFAULT_TAB, clickTab } from './events';\nimport { spec, resourcePurities, DEFAULT_BELT } from './factory';\nimport { Rational } from './rational';\n\n// There are several things going on with this control flow. Settings should\n// work like this:\n// 1) Settings are parsed from the URL fragment into the settings Map.\n// 2) Each setting's `render` function is called.\n// 3) If the setting is not present in the map, a default value is used.\n// 4) The setting is applied.\n// 5) The setting's GUI is placed into a consistent state.\n// Remember to add the setting to fragment.js, too!\n\n// tab\n\nfunction renderTab(settings) {\n    let tabName = DEFAULT_TAB;\n    if (settings.has('tab')) {\n        tabName = settings.get('tab');\n    }\n    clickTab(tabName);\n}\n\n// build targets\n\nfunction renderTargets(settings) {\n    spec.buildTargets = [];\n    select('#targets li.target').remove();\n\n    const targetSetting = settings.get('items');\n    if (targetSetting !== undefined && targetSetting !== '') {\n        const targets = targetSetting.split(',');\n        for (const targetString of targets) {\n            const parts = targetString.split(':');\n            const itemKey = parts[0];\n            const target = spec.addTarget(itemKey);\n            const type = parts[1];\n            if (type === 'f') {\n                target.setBuildings(parts[2]);\n            } else if (type === 'r') {\n                target.setRate(parts[2]);\n            } else {\n                throw new Error('unknown target type');\n            }\n        }\n    } else {\n        spec.addTarget();\n    }\n}\n\n// ignore\n\nfunction renderIgnore(settings) {\n    spec.ignore.clear();\n    // UI will be rendered later, as part of the solution.\n    const ignoreSetting = settings.get('ignore');\n    if (ignoreSetting !== undefined && ignoreSetting !== '') {\n        const ignore = ignoreSetting.split(',');\n        for (const recipeKey of ignore) {\n            const recipe = spec.recipes.get(recipeKey);\n            spec.ignore.add(recipe);\n        }\n    }\n}\n\n// overclock\n\nfunction renderOverclock(settings) {\n    spec.overclock.clear();\n    // UI will be rendered later, as part of the solution.\n    const overclockSetting = settings.get('overclock');\n    if (overclockSetting !== undefined && overclockSetting !== '') {\n        const overclock = overclockSetting.split(',');\n        for (const pair of overclock) {\n            const [recipeKey, percentString] = pair.split(':');\n            const recipe = spec.recipes.get(recipeKey);\n            const percent = Rational.fromString(percentString).div(Rational.fromFloat(100));\n            spec.setOverclock(recipe, percent);\n        }\n    }\n}\n\n// display rate\n\nfunction rateHandler() {\n    spec.format.setDisplayRate(this.value);\n    spec.updateSolution();\n}\n\nfunction renderRateOptions(settings) {\n    let rateName = DEFAULT_RATE;\n    if (settings.has('rate')) {\n        rateName = settings.get('rate');\n    }\n    spec.format.setDisplayRate(rateName);\n    const rates = [];\n    // TODO: fix this\n    // eslint-disable-next-line\n    for (const [rateName, longRateName] of longRateNames) {\n        rates.push({ rateName, longRateName });\n    }\n    const form = select('#display_rate');\n    form.selectAll('*').remove();\n    const rateOption = form.selectAll('span')\n        .data(rates)\n        .join('span');\n    rateOption.append('input')\n        .attr('id', d => `${ d.rateName }_rate`)\n        .attr('type', 'radio')\n        .attr('name', 'rate')\n        .attr('value', d => d.rateName)\n        .attr('checked', d => (d.rateName === rateName ? '' : null))\n        .on('change', rateHandler);\n    rateOption.append('label')\n        .attr('for', d => `${ d.rateName }_rate`)\n        .text(d => `items/${ d.longRateName }`);\n    rateOption.append('br');\n}\n\n// precisions\n\nfunction renderPrecisions(settings) {\n    spec.format.ratePrecision = DEFAULT_RATE_PRECISION;\n    if (settings.has('rp')) {\n        spec.format.ratePrecision = Number(settings.get('rp'));\n    }\n    select('#rprec').attr('value', spec.format.ratePrecision);\n    spec.format.countPrecision = DEFAULT_COUNT_PRECISION;\n    if (settings.has('cp')) {\n        spec.format.countPrecision = Number(settings.get('cp'));\n    }\n    select('#cprec').attr('value', spec.format.countPrecision);\n}\n\n// belt\n\nfunction beltHandler(belt) {\n    spec.belt = belt;\n    spec.updateSolution();\n}\n\nfunction renderBelts(settings) {\n    let beltKey = DEFAULT_BELT;\n    if (settings.has('belt')) {\n        beltKey = settings.get('belt');\n    }\n    spec.belt = spec.belts.get(beltKey);\n\n    const belts = [];\n    // TODO: fix this\n    // eslint-disable-next-line\n    for (const [beltKey, belt] of spec.belts) {\n        belts.push(belt);\n    }\n    const form = select('#belt_selector');\n    form.selectAll('*').remove();\n    const beltOption = form.selectAll('span')\n        .data(belts)\n        .join('span');\n    beltOption.append('input')\n        .attr('id', d => `belt.${ d.key }`)\n        .attr('type', 'radio')\n        .attr('name', 'belt')\n        .attr('value', d => d.key)\n        .attr('checked', d => (d === spec.belt ? '' : null))\n        .on('change', beltHandler);\n    beltOption.append('label')\n        .attr('for', d => `belt.${ d.key }`)\n        .append('img')\n        .classed('icon', true)\n        .attr('src', d => d.iconPath())\n        .attr('width', 32)\n        .attr('height', 32)\n        .attr('title', d => d.name);\n}\n\n// alternate recipes\n\nfunction changeAltRecipe(recipe) {\n    spec.setRecipe(recipe);\n    spec.updateSolution();\n}\n\nfunction renderIngredient(ingSpan) {\n    ingSpan.classed('ingredient', true)\n        .attr('title', d => d.item.name)\n        .append('img')\n        .classed('icon', true)\n        .attr('src', d => d.item.iconPath());\n    ingSpan.append('span')\n        .classed('count', true)\n        .text(d => spec.format.count(d.amount));\n}\n\nfunction renderAltRecipes(settings) {\n    spec.altRecipes = new Map();\n    if (settings.has('alt')) {\n        const alt = settings.get('alt').split(',');\n        for (const recipeKey of alt) {\n            const recipe = spec.recipes.get(recipeKey);\n            spec.setRecipe(recipe);\n        }\n    }\n\n    const items = [];\n    for (const tier of spec.itemTiers) {\n        for (const item of tier) {\n            if (item.recipes.length > 1) {\n                items.push(item);\n            }\n        }\n    }\n\n    const div = select('#alt_recipe_settings');\n    div.selectAll('*').remove();\n\n    const dropdowns = div.selectAll('div')\n        .data(items)\n        .enter().append('div');\n    const recipeLabel = dropdown(\n        dropdowns,\n        d => d.recipes,\n        d => `altrecipe-${ d.product.item.key }`,\n        d => spec.getRecipe(d.product.item) === d,\n        changeAltRecipe,\n    );\n\n    const productSpan = recipeLabel.append('span')\n        .selectAll('span')\n        .data(d => [d.product])\n        .join('span');\n    renderIngredient(productSpan);\n    recipeLabel.append('span')\n        .classed('arrow', true)\n        .text('\\u21d0');\n    const ingredientSpan = recipeLabel.append('span')\n        .selectAll('span')\n        .data(d => d.ingredients)\n        .join('span');\n    renderIngredient(ingredientSpan);\n}\n\n// miners\n\nfunction mineHandler(d) {\n    spec.setMiner(d.recipe, d.miner, d.purity);\n    spec.updateSolution();\n}\n\nfunction renderResources(settings) {\n    spec.initMinerSettings();\n    if (settings.has('miners')) {\n        const miners = settings.get('miners').split(',');\n        for (const minerString of miners) {\n            const [recipeKey, minerKey, purityKey] = minerString.split(':');\n            const recipe = spec.recipes.get(recipeKey);\n            const miner = spec.miners.get(minerKey);\n            const purity = resourcePurities[Number(purityKey)];\n            spec.setMiner(recipe, miner, purity);\n        }\n    }\n\n    const div = select('#resource_settings');\n    div.selectAll('*').remove();\n    const resources = [];\n    for (const [recipe, { miner, purity }] of spec.minerSettings) {\n        const minerDefs = spec.buildings.get(recipe.category);\n        const purities = [];\n        for (const purityDef of resourcePurities) {\n            const miners = [];\n            for (const minerDef of spec.buildings.get(recipe.category)) {\n                const selected = miner === minerDef && purity === purityDef;\n                miners.push({\n                    recipe: recipe,\n                    purity: purityDef,\n                    miner: minerDef,\n                    selected: selected,\n                    id: `miner.${ recipe.key }.${ purityDef.key }.${ minerDef.key }`\n                });\n            }\n            purities.push({ miners, purityDef });\n        }\n        resources.push({ recipe, purities, minerDefs });\n    }\n    const resourceTable = div.selectAll('table')\n        .data(resources)\n        .join('table')\n        .classed('resource', true);\n    const header = resourceTable.append('tr');\n    header.append('th')\n        .append('img')\n        .classed('icon', true)\n        .attr('src', d => d.recipe.iconPath())\n        .attr('width', 32)\n        .attr('height', 32)\n        .attr('title', d => d.recipe.name);\n    header.selectAll('th')\n        .filter((d, i) => i > 0)\n        .data(d => d.minerDefs)\n        .join('th')\n        .append('img')\n        .classed('icon', true)\n        .attr('src', d => d.iconPath())\n        .attr('width', 32)\n        .attr('height', 32)\n        .attr('title', d => d.name);\n    const purityRow = resourceTable.selectAll('tr')\n        .filter((d, i) => i > 0)\n        .data(d => d.purities)\n        .join('tr');\n    purityRow.append('td')\n        .text(d => d.purityDef.name);\n    const cell = purityRow.selectAll('td')\n        .filter((d, i) => i > 0)\n        .data(d => d.miners)\n        .join('td');\n    cell.append('input')\n        .attr('id', d => d.id)\n        .attr('type', 'radio')\n        .attr('name', d => d.recipe.key)\n        .attr('checked', d => (d.selected ? '' : null))\n        .on('change', mineHandler);\n    cell.append('label')\n        .attr('for', d => d.id)\n        .append('svg')\n        .attr('viewBox', '0,0,32,32')\n        .style('width', 32)\n        .style('height', 32)\n        .append('rect')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('width', 32)\n        .attr('height', 32)\n        .attr('rx', 4)\n        .attr('ry', 4);\n}\n\nexport default function renderSettings(settings) {\n    renderTargets(settings);\n    renderIgnore(settings);\n    renderOverclock(settings);\n    renderRateOptions(settings);\n    renderPrecisions(settings);\n    renderBelts(settings);\n    renderAltRecipes(settings);\n    renderResources(settings);\n    renderTab(settings);\n}\n","// import * as d3 from 'd3';\n\nimport { getBelts } from './belt';\nimport { getBuildings } from './buildings';\nimport { getItems } from './Item';\nimport { getRecipes } from './recipes';\nimport { loadSettings } from './fragment';\nimport renderSettings from './settings';\nimport { spec } from './factory';\n\nfunction loadData(settings) {\n    // d3.json('./data/data.json')\n    //     .then(data => {\n    const items = getItems();\n    const recipes = getRecipes(items);\n    const buildings = getBuildings();\n    const belts = getBelts();\n    spec.setData(items, recipes, buildings, belts);\n\n    renderSettings(settings);\n\n    spec.updateSolution();\n    // });\n}\n\nfunction init() {\n    const settings = loadSettings(window.location.hash);\n    loadData(settings);\n}\n\nexport default init;\n","import recipeData from '../data/recipes.json';\nimport resourceData from '../data/resources.json';\n\nimport Recipe from './Recipe';\nimport ResourceRecipe from './ResourceRecipe';\n\nexport { default as Recipe } from './Recipe';\nexport { default as ResourceRecipe } from './ResourceRecipe';\n\nexport const getRecipes = items => {\n    const recipes = new Map();\n    for (const d of resourceData) {\n        const item = items.get(d.key_name);\n        recipes.set(d.key_name, new ResourceRecipe(item, d.category));\n    }\n    for (const d of recipeData) {\n        recipes.set(d.key_name, Recipe.makeRecipe(items, d));\n    }\n    for (const [itemKey, item] of items) {\n        if (!item.recipes.length) {\n            recipes.set(itemKey, new ResourceRecipe(item, null));\n        }\n    }\n    return recipes;\n};\n","import buildingData from '../data/buildings.json';\nimport minerData from '../data/miners.json';\nimport { Rational } from '../rational';\n\nimport Building from './building';\nimport Miner from './Miner';\n\nexport { default as Miner } from './Miner';\n\nexport const getBuildings = () => {\n    const buildings = [];\n    for (const d of buildingData) {\n        buildings.push(new Building(\n            d.key_name,\n            d.name,\n            d.category,\n            Rational.fromFloat(d.power),\n            d.max,\n        ));\n    }\n    for (const d of minerData) {\n        buildings.push(new Miner(\n            d.key_name,\n            d.name,\n            d.category,\n            Rational.fromFloat(d.power),\n            Rational.fromFloat(d.base_rate).div(Rational.fromFloat(60)),\n        ));\n    }\n    return buildings;\n};\n","import Main from './Main';\n\nexport default Main;\n","import React from 'react';\n\nimport {\n    changeCountPrecision, changeRatePrecision, clickTab, plusHandler\n} from '../../events';\nimport init from '../../init';\n\n// TODO: convert to stylized components\nimport './Main.css';\n\nclass Main extends React.PureComponent {\n    handlers = {\n        changeCountPrecision,\n        changeRatePrecision,\n        clickTab,\n        init,\n        plusHandler\n    }\n\n    componentDidMount() {\n        this.handlers.init();\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <ul id='targets'>\n                    <li id='plusButton'>\n                        <button className='targetButton ui' onClick={ () => this.handlers.plusHandler() } title='Add new item.'>+</button>\n                    </li>\n                </ul>\n                <div className='tabs'>\n                    <button className='tab_button' id='graph_button' onClick={ () => this.handlers.clickTab('graph') }>Visualize</button>\n                    <button className='tab_button' id='totals_button' onClick={ () => this.handlers.clickTab('totals') }>Items</button>\n                    <button className='tab_button' id='settings_button' onClick={ () => this.handlers.clickTab('settings') }>Settings</button>\n                    <button className='tab_button' id='about_button' onClick={ () => this.handlers.clickTab('about') }>About</button>\n                </div>\n                <div className='tab graph' id='graph_tab'>\n                    <svg id='graph'><g /></svg>\n                </div>\n                <div className='tab' id='totals_tab'>\n                    <table className='power-shard-collapsed' id='totals'>\n                        <thead><tr /></thead>\n                        <tbody />\n                        <tfoot>\n                            <tr className='power'>\n                                <td className='right-align label'><b>total average power: </b></td>\n                                <td className='right-align pad'><tt /></td>\n                            </tr>\n                            <tr className='power'>\n                                <td className='right-align label'><b>total peak power: </b></td>\n                                <td className='right-align pad'><tt /></td>\n                            </tr>\n                            <tr className='power-shard'>\n                                <td className='right-align label'><b>power shards needed: </b></td>\n                                <td className='right-align pad'><tt /></td>\n                            </tr>\n                        </tfoot>\n                    </table>\n                </div>\n                <div className='tab' id='settings_tab'>\n                    <table id='settings'>\n                        <tbody>\n\n                            <tr className='setting-section'>\n                                <td colSpan='2'>\n                                    <span>Display</span><hr />\n                                </td>\n                            </tr>\n                            <tr className='setting-row'>\n                                <td className='setting-label top'>Display rates as:</td>\n                                <td><form id='display_rate' /></td>\n                            </tr>\n                            <tr className='setting-row'>\n                                <td className='setting-label'>Rate precision:</td>\n                                <td>\n                                    <input className='prec' id='rprec' min='0' onChange={ event => this.handlers.changeRatePrecision(event) } type='number' value='3' />\n                                </td>\n                            </tr>\n                            <tr className='setting-row'>\n                                <td className='setting-label'>Count precision:</td>\n                                <td>\n                                    <input className='prec' id='cprec' min='0' onChange={ event => this.handlers.changeCountPrecision(event) } type='number' value='1' />\n                                </td>\n                            </tr>\n                            <tr className='setting-section'>\n                                <td colSpan='2'>\n                                    <span>Factory</span>\n                                    <hr />\n                                </td>\n                            </tr>\n                            <tr className='setting-row'>\n                                <td className='setting-label'>Belt:</td>\n                                <td><span id='belt_selector' /></td>\n                            </tr>\n                            <tr className='setting-section'>\n                                <td colSpan='2'>\n                                    <span>Recipes</span><hr />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td colSpan='2'>\n                                    <div id='alt_recipe_settings' />\n                                </td>\n                            </tr>\n                            <tr className='setting-section'>\n                                <td colSpan='2'>\n                                    <span>Resources</span>\n                                    <hr />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td colSpan='2'>\n                                    <div id='resource_settings' />\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n                <div className='tab' id='about_tab'>\n                    <div className = 'about-content'>\n                        This calculator is copyright 2019 Kirk McDonald. It is licensed under the Apache License 2.0, and its source may be <a href='https://github.com/KirkMcDonald/satisfactory-calculator'>found on github, here</a>.\n                        This calculator is based on my <a href='https://kirkmcdonald.github.io/calc.html'>Factorio calculator</a>, and was created primarily to see what the project would look like if rewritten from scratch, applying lessons learned over the years spent developing the original.\n                        Satisfactory is a simpler game for which to calculate ratios than Factorio. This simplicity means that it is easier for this calculator to support certain features that would be very difficult to add to the Factorio calculator, but which I have wanted to implement for a long time. This can be seen in the use of a <a href='https://en.wikipedia.org/wiki/Sankey_diagram'>Sankey diagram</a> in the visualizer, among other things.\n                        If you wish to support the calculator, please consider donating to <a href='https://www.patreon.com/kirkmcdonald'>my Patreon campaign</a>. Any amount helps. And thank you!\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Main;\n","import React, { Fragment } from 'react';\nimport {\n    BrowserRouter, Route, Switch\n} from 'react-router-dom';\n\nimport Header from '../Header';\nimport Main from '../Main';\n// import ROUTES from '../../constants/routes';\n\nclass Router extends React.PureComponent {\n    render() {\n        return (\n            <BrowserRouter>\n                <Fragment>\n                    <Header />\n                    <Switch>\n                        { /* <Route exact path={ ROUTES.LANDING } render={ () => <Redirect to={ ROUTES.SIGN_IN } { ...this.props } /> } /> */ }\n                        { /* <Route path={ ROUTES.SIGN_IN } render={ () => <SignIn { ...this.props } /> } /> */ }\n                        <Route component={ Main } path='*' />\n                        { /* <Route path='*' render={ () => <Redirect to={ ROUTES.SIGN_IN } { ...this.props } /> } /> */ }\n                    </Switch>\n                </Fragment>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default Router;\n","import App from './App';\n\nexport default App;\n","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport Router from '../Router';\n\nclass App extends React.PureComponent {\n    render() {\n        return (\n            <React.Fragment>\n                <CssBaseline />\n                <Router />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\n\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst theme = createMuiTheme({\n    palette: {\n        // primary: {\n        //     //     background: {\n        //     //         default: '#303030',\n        //     //         paper: '#424242'\n        //     //     },\n        //     // main: '#7289da', // discord blurple\n        // },\n        // secondary: {\n        //     // main: '#61DAFB', // react blue\n        // },\n        text: {\n            primary: '#E0E0E0',\n        },\n        type: 'dark'\n    },\n    typography: {\n        useNextVariants: true\n    }\n});\n\nReactDOM.render(\n    <React.StrictMode>\n        <MuiThemeProvider theme={ theme }>\n            <App />\n        </MuiThemeProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}